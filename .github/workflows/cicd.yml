name: Deploy Hospital App with Nomad and Octopus

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  # ------------------------------
  # Infra provisioning with OpenTofu
  # ------------------------------
  deploy-infra:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: latest

      - name: OpenTofu Init
        run: tofu init

      - name: OpenTofu Plan
        run: tofu plan

      - name: Deploy with OpenTofu
        run: "tofu apply -var-file='tfvars/${{ env.ENVIRONMENT }}.tfvars' -auto-approve"




      # Uncomment for auto-apply
      #- name: OpenTofu Apply
      #  run: tofu apply -auto-approve

  # ------------------------------
  # Build & Push Docker image to ECR
  # ------------------------------
  build-and-push:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      ECR_REPOSITORY: hospital-app
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag Docker image
        run: docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # ------------------------------
  # Deploy Nomad Job
  # ------------------------------
  deploy-nomad:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
      NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Nomad CLI
        uses: hashicorp/setup-nomad@main
        with:
          version: "1.8.0"

      - name: Inject image tag into Nomad job file
        run: |
          sed "s|<IMAGE_TAG>|${{ env.IMAGE_TAG }}|g" nomad/jobs/hospital-app.nomad.hcl.template > hospital-app.nomad.hcl
          cat hospital-app.nomad.hcl

      - name: Validate Nomad job
        run: nomad job validate hospital-app.nomad.hcl

      - name: Deploy to Nomad
        run: nomad job run hospital-app.nomad.hcl

  # ------------------------------
  # Deploy with Octopus
  # ------------------------------
  deploy-octopus:
    runs-on: ubuntu-latest
    needs: deploy-nomad
    steps:
      - name: Create a release in Octopus Deploy
        uses: OctopusDeploy/create-release-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          project: 'HospitalApp'
          release_number: "1.0.${{ github.run_number }}"
          channel: 'Default'

      - name: Deploy the release to Development
        uses: OctopusDeploy/deploy-release-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          project: 'HospitalApp'
          release_number: "1.0.${{ github.run_number }}"
          environments: |
            Development
